/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package facturacion;

import static facturacion.Interfaz_Clientes.valida;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANDRES
 */
public class interfaz_reportes extends javax.swing.JInternalFrame {

    /**
     * Creates new form interfaz_consultas
     */
    private Object[][] datostabla;
    control_existencias ctr = new control_existencias();

    public interfaz_reportes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuscar = new javax.swing.JButton();
        txtCliente = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReporte = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        chCantidad = new javax.swing.JCheckBox();
        fechaFin = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setTitle("Reportes");

        btnBuscar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtCliente.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClienteKeyTyped(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setEnabled(false);

        tablaReporte.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tablaReporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaReporte.setEnabled(false);
        tablaReporte.setName(""); // NOI18N
        jScrollPane1.setViewportView(tablaReporte);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Tipo :");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Filtros:");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Fecha Inicial :");

        cmbTipo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Venta", "Mantenimiento" }));
        cmbTipo.setToolTipText("");
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });

        fechaInicio.setDateFormatString("dd/MM/yyyy");

        chCantidad.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chCantidad.setText("Cantidad de Procesos");
        chCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chCantidadActionPerformed(evt);
            }
        });

        fechaFin.setDateFormatString("dd/MM/yyyy");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Fecha Final :");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setText("NÃºmero de documento del cliente :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1090, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1064, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(chCantidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String convertTostring(Date Date) {
        DateFormat df;
        String fech = null;
        //2019-06-22, ####.##
        //df = new SimpleDateFormat("dd-MM-yyyy");
        df = new SimpleDateFormat("yyyy-MM-dd");
        fech = df.format(Date);
        return fech;
    }

    public void cantidadProcesos() {
        String tipo = "";
        String cedula = "";
        String fecha = "";
        
        tipo = cmbTipo.getSelectedItem().toString();
        cedula = txtCliente.getText();
        fecha = (fechaInicio.getDate()!=null)?convertTostring(fechaInicio.getDate()):"";
        if(tipo.equals("Venta")){
            if(!cedula.isEmpty() && fecha.isEmpty()){
                if(!cedula.isEmpty()){
                    if(!valida(cedula)){
                       JOptionPane.showMessageDialog(null, "Cedula Incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                datostabla = ctr.contarFactura(cedula,fecha);
                String columnas[] = {"Cedula Cliente", "Fecha Ultima venta", "NÃºmero de ventas realizados al cliente"};
                DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                tablaReporte.setModel(datostcli);
            }else if(cedula.isEmpty() && !fecha.isEmpty()){
                datostabla = ctr.contarFactura(cedula,fecha);
                String columnas[] = {"Ultimo cliente que realizo una compra a la fecha seleccionada", "Fecha de venta", "NÃºmero de ventas realizados en la fecha seleccionada"};
                DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                tablaReporte.setModel(datostcli);
            }else{//Vacios
                datostabla = ctr.contarFactura(cedula,fecha);
                String columnas[] = {"Cedula Cliente", "Fecha Ultima venta", "NÃºmero de ventas realizados al cliente"};
                DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                tablaReporte.setModel(datostcli);
            }
        }else{
            if(!cedula.isEmpty() && fecha.isEmpty()){
                if(!cedula.isEmpty()){
                    if(!valida(cedula)){
                       JOptionPane.showMessageDialog(null, "Cedula Incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                datostabla = ctr.contarMantenimiento(cedula,fecha);
                String columnas[] = {"Cedula Cliente", "Fecha Ultima matenimiento", "NÃºmero de mantenimientos realizados al cliente"};
                DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                tablaReporte.setModel(datostcli);
            }else if(cedula.isEmpty() && !fecha.isEmpty()){
                datostabla = ctr.contarMantenimiento(cedula,fecha);
                String columnas[] = {"Ultimo cliente que realizo un Mantenimiento a la fecha seleccionada", "Fecha de Mantenimiento", "NÃºmero de mantenimientos realizados en la fecha seleccionada"};
                DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                tablaReporte.setModel(datostcli);
            }else{
                datostabla = ctr.contarMantenimiento(cedula,fecha);
                String columnas[] = {"Cedula Cliente", "Fecha Ultima mantenimiento", "NÃºmero de mantenimientos realizados al cliente"};
                DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                tablaReporte.setModel(datostcli);
            }
        }
        
    }

    
    public static boolean valida(String x) {
        int suma = 0;
        if (x.length() == 9) {
            System.out.println("Ingrese su cedula de 10 digitos");
            return false;
        } else {
            int a[] = new int[x.length() / 2];
            int b[] = new int[(x.length() / 2)];
            int c = 0;
            int d = 1;
            for (int i = 0; i < x.length() / 2; i++) {
                a[i] = Integer.parseInt(String.valueOf(x.charAt(c)));
                c = c + 2;
                if (i < (x.length() / 2) - 1) {
                    b[i] = Integer.parseInt(String.valueOf(x.charAt(d)));
                    d = d + 2;
                }
            }

            for (int i = 0; i < a.length; i++) {
                a[i] = a[i] * 2;
                if (a[i] > 9) {
                    a[i] = a[i] - 9;
                }
                suma = suma + a[i] + b[i];
            }
            int aux = suma / 10;
            int dec = (aux + 1) * 10;
            if ((dec - suma) == Integer.parseInt(String.valueOf(x.charAt(x.length() - 1)))) {
                return true;
            } else if (suma % 10 == 0 && x.charAt(x.length() - 1) == '0') {
                return true;
            } else {
                return false;
            }
        }

    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        String tipo = "";
        String cedula = "";
        String desde = "";
        String hasta = ""
;        String[] columnas;
        if (chCantidad.isSelected()) {
            cantidadProcesos();
        } else {
            try {
                tipo = cmbTipo.getSelectedItem().toString();
                cedula = txtCliente.getText();
                desde = convertTostring(fechaInicio.getDate());
                hasta = convertTostring(fechaFin.getDate());

            } catch (NullPointerException e) {
                desde = "";
                hasta = "";

            } finally {
                //System.out.println("tipo: " + tipo + " cedula: " + cedula + " fecha: " + fecha);
                if (cmbTipo.getSelectedItem().equals("Mantenimiento")) {
                    columnas = new String[5];
                    columnas[0] = "No Mantenimiento";
                    columnas[1] = "Cedula Cliente";
                    columnas[2] = "Fecha de entrega";
                    columnas[3] = "Total";
                    columnas[4] = "Observacion";

                } else {
                    columnas = new String[4];
                    columnas[0] = "No Factura";
                    columnas[1] = "Cedula Cliente";
                   
                    columnas[2] = "Fecha de compra";
                    columnas[3] = "Total Pagado";
                }
                if(!cedula.isEmpty()){
                    if(!valida(cedula)){
                       JOptionPane.showMessageDialog(null, "Cedula Incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                }               
                datostabla = ctr.consultaReporte(tipo, cedula, desde, hasta);
//                System.out.print("error capa presentacion: "+datostabla[0].length);
//                if(datostabla[0][0].equals("")){
//                   JOptionPane.showMessageDialog(null, "No se encontro registro", "Datos vacios", JOptionPane.ERROR_MESSAGE);
//                   System.out.print("error capa presentacion: "+datostabla.length);
//                 }                
                 DefaultTableModel datostcli = new DefaultTableModel(datostabla, columnas);
                 tablaReporte.setModel(datostcli);
                    
              
                    
            }
        }    
   

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void chCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chCantidadActionPerformed

    private void txtClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyTyped
        // TODO add your handling code here:
        char vChar = evt.getKeyChar();
        if (!(Character.isDigit(vChar)
                || (vChar == KeyEvent.VK_BACK_SPACE)
                || (vChar == KeyEvent.VK_DELETE))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtClienteKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JCheckBox chCantidad;
    private javax.swing.JComboBox cmbTipo;
    private com.toedter.calendar.JDateChooser fechaFin;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tablaReporte;
    private javax.swing.JTextField txtCliente;
    // End of variables declaration//GEN-END:variables
}
